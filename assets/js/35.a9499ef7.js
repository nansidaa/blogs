(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{484:function(t,s,o){t.exports=o.p+"assets/img/1713152894574.3b888c81.jpg"},485:function(t,s,o){t.exports=o.p+"assets/img/1713152921690.abcb0804.jpg"},486:function(t,s,o){t.exports=o.p+"assets/img/1713152948039.5ba4ec89.jpg"},574:function(t,s,o){"use strict";o.r(s);var a=o(2),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("📒 分包就是把一些不会常规更新的文件，进行单独打包处理.")])]),t._v(" "),s("blockquote",[s("p",[t._v("📒 浏览器的缓存策略：静态资源--》文件名字没有变化，那么浏览器不会更新不会向服务器要内容，直接去缓存拿，    这就是为什么有时候非要清理缓存浏览器的数据才会更新（hash乱码）文件名不变，服务器就不会去要文件内容，就会取缓存，如果文件名变了服务器就会更新文件内容，所有要用到hash乱码，文件内容一变，文件名字也会跟着变，但是有时候下载的包，例如lodash，常规文件变的时候，然后hash乱码构成的文件名字也会变，这样子它整个文件里又要重新加载，然后lodash又不会改变，也不用重新加载，但是文件名字变了整个都会重新加载，这样子很消耗性能，所有要用分包，将一些不会常规更新的文件，进行单独打包处理（将需要更新的部分一个文件，不需要更新的是一个部分被浏览器缓存）")])]),t._v(" "),s("blockquote",[s("p",[t._v("📒 多包，就是有多个xxx.html 和xxxx.js 然后打包 vite优化了")])]),t._v(" "),s("p",[s("img",{attrs:{src:o(484),alt:"0"}}),s("br"),t._v(" "),s("img",{attrs:{src:o(485),alt:"-"}})]),t._v(" "),s("blockquote",[s("p",[t._v("📒 打包以后：\n"),s("img",{attrs:{src:o(486),alt:"2"}})])])])}),[],!1,null,null,null);s.default=e.exports}}]);