(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{487:function(t,s,n){t.exports=n.p+"assets/img/1713153179621.21b4c990.jpg"},575:function(t,s,n){"use strict";n.r(s);var a=n(2),p=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("📒 有时候我们的文件资源太大了，在http中传输非常损耗传输性能，体积越大压力越大；"),s("br"),t._v("\n所以就将所有的静态文件进行压缩，达到减少体积的目的；"),s("br"),t._v("\n服务端读文件后 ==》 压缩文件，然后将压缩文件通过http传输给客户端，客户端收到压缩包 ==》浏览器再进行解压缩的动作；"),s("br"),t._v("\n从入口文件到他的一系列依赖最终打包成的js文件就叫块（chunk）；但是：块最终会映射成js文件，但不是js文件")])]),t._v(" "),s("p",[s("img",{attrs:{src:n(487),alt:"2"}})]),t._v(" "),s("blockquote",[s("p",[t._v("📒 安装gzip"),s("br"),t._v("\nyarn add vite-plugin-compression-D                 https://github.com/vbenjs/vite-plugin-compression/tree/main#readme")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" viteCompression "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vite-plugin-compression'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("viteCompression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("📒 然后在打包，就会提示已经用gzip压缩 "),s("br"),t._v("\n然后将打包后的文件发给后端或者运维"),s("br"),t._v("\n就告诉后端，文件里面已经用gzip压缩过了 就别压缩了"),s("br"),t._v("\n返回服务端读取gzip文件（.gz后缀），后端会设置一个响应头（content-encoding）--\x3egzip(代表告诉浏览器这个文件是用gzip压缩过的文件)；然后浏览器收到响应结果，发现响应头里有gzip的字段，就会赶紧解压，得到原原本本的js文件（但是浏览器还是会承担一定的解压时间的）；！！！如果体积不是很大，就不要用gzip压缩（因为浏览器还要解压时间，没有必要）！！")])])])}),[],!1,null,null,null);s.default=p.exports}}]);