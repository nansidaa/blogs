(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{530:function(t,s,a){"use strict";a.r(s);var n=a(2),p=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("path模块在不同的操作系统是有差异的")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("windows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" posix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("posix表示可移植操作系统接口，也就是定义了一套标准，遵守这套标准的操作系统有")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("like unix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("linux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("macOs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("windows wsl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，为什么要定义这套标准，比如在Linux系统启动一个进程需要调用fork函数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("在windows启动一个进程需要调用creatprocess函数，这样就会有问题，比如我在linux写好了代码，需要移植到windows发现函数不统一，posix标准的出现就是为了解决这个问题。\nWindows 并没有完全遵循 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POSIX")]),t._v(" 标准。Windows 在设计上采用了不同于 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POSIX")]),t._v(" 的路径表示方法。\n在 Windows 系统中，路径使用反斜杠（\\）作为路径分隔符。这与 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POSIX")]),t._v(" 系统使用的正斜杠（"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("）是不同的。这是 Windows 系统的历史原因所致，早期的 Windows 操作系统采用了不同的设计选择。\n")])])]),s("h2",{attrs:{id:"windows-posix-差异。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-posix-差异。"}},[t._v("#")]),t._v(" 📒 windows posix 差异。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法返回的是给定路径中的最后一部分\n在posix处理windows路径：path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C:\\temp\\myfile.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回: 'C:\\temp\\myfile.html'结果返回的并不对 应该返回 myfile.html")]),t._v("\n如果要在posix系统处理windows的路径需要调用对应操作系统的方法应该修改为path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("win32"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C:\\temp\\myfile.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("返回 myfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html\npath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("win32"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("basename是windows下的路径  path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("posix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("basename 是posix下的路径\n")])])]),s("h2",{attrs:{id:"path-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#path-命令"}},[t._v("#")]),t._v(" 📒 path 命令")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirname：这个"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v("和basename正好互补path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/aaaa/bbbb/cccc/index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dirname "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v(" 返回 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("aaaa"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bbbb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cccc 除了最后一个路径的其他路径。\n——————\npath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extname：这个"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v(" 用来返回扩展名例如"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bbb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ccc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt；path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("extname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/aaaa/bbbb/cccc/index.html.ccc.ddd.aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("返回的是"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aaa "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果有多个 . 返回最后一个 如果没有扩展名返回空")]),t._v("\n——————\npath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/cxk'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/ikun'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /foo/cxk/ikun 也可以支持 ./ ../操作符path.join('/fool','/csx','../') 返回的就是/fool")]),t._v("\n——————\npath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolve：用于将相对路径解析并且返回绝对路径；\n如果传入了多个绝对路径 它将返回最右边的绝对路径 path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/bbb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/ccc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   /ccc")]),t._v("\n传入绝对路径 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 相对路径 path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  /User/xiaoman/DeskTop/node/index.js")]),t._v("\n如果只传入相对路径 path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回工作目录 + index.js")]),t._v("\n——————\n path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse：用于解析文件路径。它接受一个路径字符串作为输入，并返回一个包含路径各个组成部分的对象 \n path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home/user/dir/file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前的根目录")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home/user/dir'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前文件的路径")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("base")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前文件名  ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ext")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前文件扩展名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//文件名除去扩展名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n ——————  \npath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("format 在把对象转回字符串\n\npath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前的根目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home/user/documents'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前文件的路径")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("base")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前文件名  ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ext")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前文件扩展名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//文件名除去扩展名")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /home/user/dir/file.txt")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=p.exports}}]);